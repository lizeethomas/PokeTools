@code {
    [Parameter] public string SearchText { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> SearchTextChanged { get; set; }

    [Parameter] public HashSet<string> SelectedCategories { get; set; } = new();
    [Parameter] public EventCallback<string> OnToggleCategory { get; set; }

    [Parameter] public bool ShowFullyEvolved { get; set; }
    [Parameter] public EventCallback<bool> OnToggleFullyEvolved { get; set; }
    [Parameter] public bool ShowOUOnly { get; set; }
    [Parameter] public EventCallback<bool> OnToggleOUOnly { get; set; }

    private async Task ToggleOUOnly(ChangeEventArgs e)
    {
        bool isChecked = (bool)e.Value!;
        await OnToggleOUOnly.InvokeAsync(isChecked);
    }

    private async Task OnInput(ChangeEventArgs e)
    {
        SearchText = e.Value?.ToString() ?? string.Empty;
        await SearchTextChanged.InvokeAsync(SearchText);
    }

    private async Task ToggleCategory(ChangeEventArgs e, string category)
    {
        await OnToggleCategory.InvokeAsync(category);
    }

    private async Task ToggleFullyEvolved(ChangeEventArgs e)
    {
        bool isChecked = (bool)e.Value!;
        await OnToggleFullyEvolved.InvokeAsync(isChecked);
    }
}

<div class="filter-section">
    <div class="filter-header">
        <h3>Search</h3>
    </div>
    <div class="search-box-wrapper">
        <input type="text"
               class="search-box"
               placeholder="Type a Pokémon name..."
               value="@SearchText"
               @oninput="OnInput" />
    </div>
    <div class="checkbox-row">
        @foreach (var category in new[] { "Non-Legendary", "Legendary & Mythical" })
        {
            <label class="checkbox-item">
                <input type="checkbox"
                       checked="@SelectedCategories.Contains(category)"
                @onchange="e => ToggleCategory(e, category)" />
                @category
            </label>
        }
        <label class="checkbox-item">
            <input type="checkbox"
                   checked="@ShowFullyEvolved"
            @onchange="ToggleFullyEvolved" />
            Fully Evolved
        </label>

        <label class="checkbox-item">
            <input type="checkbox"
                   checked="@ShowOUOnly"
            @onchange="ToggleOUOnly" />
            OU
        </label>
    </div>
</div>
